{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"real_hour.ipynb의 사본의 사본","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"c8mSSO7VKAjW","colab_type":"code","outputId":"f24c0bf3-106f-4b5c-f923-8d64bafe6a3c","executionInfo":{"status":"ok","timestamp":1572172951844,"user_tz":-540,"elapsed":33900,"user":{"displayName":"이현호","photoUrl":"","userId":"01233170983161563057"}},"colab":{"base_uri":"https://localhost:8080/","height":829}},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import pandas as pd\n","import numpy as np\n","import os\n","import gc\n","import tqdm\n","import datetime\n","import random\n","from collections import defaultdict\n","from sklearn.neural_network import MLPRegressor\n","\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","from sklearn.linear_model import Lasso, Ridge\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import KFold, StratifiedKFold, TimeSeriesSplit, GroupKFold\n","from sklearn.svm import SVR\n","\n","from sklearn.ensemble import RandomForestRegressor\n","\n","# model\n","import xgboost as xgb\n","import lightgbm as lgb\n","\n","# evaluation\n","from sklearn.metrics import mean_squared_error\n","\n","# install\n","!pip install workalendar\n","from workalendar.asia import SouthKorea"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocs.test%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.photos.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fpeopleapi.readonly&response_type=code\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n","Collecting workalendar\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/53/3b/0674dab5f7b9878c4907ad9f833575fc23c58616c126c65cd21b9fd2bedb/workalendar-7.0.0-py3-none-any.whl (159kB)\n","\u001b[K     |████████████████████████████████| 163kB 5.0MB/s \n","\u001b[?25hCollecting pyCalverter\n","  Downloading https://files.pythonhosted.org/packages/4f/5c/57c6853f7a5bc41fc9da7651ae67b9c76381083742613faa7381724081e9/pyCalverter-1.6.1.tar.gz\n","Requirement already satisfied: lunardate in /usr/local/lib/python3.6/dist-packages (from workalendar) (0.2.0)\n","Collecting skyfield\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/7c/9c/4a9879460dddac5bda8d7e8b8eb6159093d2b285077d085ff78d4f02a2bc/skyfield-1.13.tar.gz (224kB)\n","\u001b[K     |████████████████████████████████| 225kB 48.6MB/s \n","\u001b[?25hRequirement already satisfied: python-dateutil in /usr/local/lib/python3.6/dist-packages (from workalendar) (2.6.1)\n","Requirement already satisfied: pytz in /usr/local/lib/python3.6/dist-packages (from workalendar) (2018.9)\n","Collecting pyluach\n","  Downloading https://files.pythonhosted.org/packages/79/2c/4f413270a621dd6238fa67d9db81efd5edc02b44a5b1b8510552f643fc58/pyluach-1.0.1-py3-none-any.whl\n","Collecting skyfield-data\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ea/46/666a4b44709badf6e11b8b77a7aeefebababc1648f46a893f9f8642e99b3/skyfield_data-0.1.0-py2.py3-none-any.whl (16.0MB)\n","\u001b[K     |████████████████████████████████| 16.0MB 156kB/s \n","\u001b[?25hRequirement already satisfied: setuptools>=1.0 in /usr/local/lib/python3.6/dist-packages (from workalendar) (41.4.0)\n","Collecting jplephem>=2.3\n","  Downloading https://files.pythonhosted.org/packages/14/6f/354fd50e625a66c7be3f08095c0e1fa389c75453858acf2689ffa9c4fc54/jplephem-2.9.tar.gz\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from skyfield->workalendar) (1.17.3)\n","Collecting sgp4>=1.4\n","  Downloading https://files.pythonhosted.org/packages/d2/00/3f3699203176017211a71fe16e3fa71bae946ac92ade77d5a2ffc5da8576/sgp4-1.4.tar.gz\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil->workalendar) (1.12.0)\n","Building wheels for collected packages: pyCalverter, skyfield, jplephem, sgp4\n","  Building wheel for pyCalverter (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyCalverter: filename=pyCalverter-1.6.1-cp36-none-any.whl size=4200 sha256=f1749eabe5e834436b9fc56fa3e94aec1e99230095634aa37ffe1ea824a2b234\n","  Stored in directory: /root/.cache/pip/wheels/77/4d/86/db4ff4eca6178dbbd5a365d095f97f6021e2a48f09908be79c\n","  Building wheel for skyfield (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for skyfield: filename=skyfield-1.13-cp36-none-any.whl size=253163 sha256=377c0d0b80a40bc43c72e624022ee1233c595c210d13c3bb8ea64c772066cb69\n","  Stored in directory: /root/.cache/pip/wheels/76/3d/1c/afe30b6c7a526ba23b63c1947c64cc7b9142a6e78858fe2384\n","  Building wheel for jplephem (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for jplephem: filename=jplephem-2.9-cp36-none-any.whl size=41100 sha256=4572d745e4d7edae142fd4cf282c5a25ed500ed3d6d04e35f3d29f388e7186f8\n","  Stored in directory: /root/.cache/pip/wheels/13/d3/06/3799163edac5d1f454832143f7730413dcc56f42acfbb9f0d3\n","  Building wheel for sgp4 (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for sgp4: filename=sgp4-1.4-cp36-none-any.whl size=35410 sha256=a128311f408a6cd77498e7ae8b2f70ec4341099b70df096a95333899f717d105\n","  Stored in directory: /root/.cache/pip/wheels/6d/e2/42/5dc20daf2ba62ae03dc8abe10744ee67d9452df447dac561db\n","Successfully built pyCalverter skyfield jplephem sgp4\n","Installing collected packages: pyCalverter, jplephem, sgp4, skyfield, pyluach, skyfield-data, workalendar\n","Successfully installed jplephem-2.9 pyCalverter-1.6.1 pyluach-1.0.1 sgp4-1.4 skyfield-1.13 skyfield-data-0.1.0 workalendar-7.0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fMeuiosGKDcD","colab_type":"code","colab":{}},"source":["path = 'drive/My Drive/11dacon/data/'\n","\n","def seed_everything(seed=0):\n","    random.seed(seed)\n","    np.random.seed(seed)\n","    \n","from numba import jit\n","import math\n","\n","@jit\n","def smape_fast(y_true, y_pred, exp=False):\n","    \n","    if exp:\n","        y_true = np.expm1(np.array(y_true))\n","        y_pred = np.expm1(np.array(y_pred))\n","    else:\n","        y_true = np.array(y_true)\n","        y_pred = np.array(y_pred)\n","        \n","    out = 0\n","    for i in range(y_true.shape[0]):\n","        a = y_true[i]\n","        b = y_pred[i]\n","        c = a+b\n","        if c == 0:\n","            continue\n","        out += math.fabs(a - b) / c\n","    out *= (200.0 / y_true.shape[0])\n","    return out\n","\n","def rmse(y_true, y_pred, exp=False):\n","    if exp:\n","        return np.sqrt(mean_squared_error(np.expm1(y_true), np.expm1(y_pred)))\n","    else:\n","        return np.sqrt(mean_squared_error(y_true, y_pred))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"DcDxt9N7KDfR","colab_type":"code","colab":{}},"source":["test = pd.read_csv(path+'test.csv')\n","sub = pd.read_csv(path+'submission.csv')\n","\n","holidays = pd.concat([pd.Series(np.array(SouthKorea().holidays(2018))[:, 0]), pd.Series(np.array(SouthKorea().holidays(2017))[:, 0]), pd.Series(np.array(SouthKorea().holidays(2016))[:, 0])]).reset_index(drop=True)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"fly2pQ5yWti2","colab_type":"code","colab":{}},"source":["weather = pd.read_csv(path+'weather_hour.csv', encoding='cp949').iloc[:, 1:]\n","weather['일시'] = pd.to_datetime(weather['일시'])\n","weather = weather.iloc[:, :2]\n","weather.columns = ['Time', 'temp']"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"tp_rXSVWKDiM","colab_type":"code","colab":{}},"source":["def merge(train, col, hour=True, use_temp=True):\n","    if hour:\n","        temp = train[['Time', col]].rename(columns={col:'target'})\n","        temp['Time'] = pd.to_datetime(temp['Time'])\n","        temp = temp[temp['Time']>='2017-11-23'].reset_index(drop=True)\n","        temp = temp.loc[temp.index[temp['target'].astype(str)!='nan'][0]:].reset_index(drop=True)\n","        \n","        temp['Time'] = pd.to_datetime(temp['Time'])\n","        temp['month'] = temp['Time'].dt.month\n","        temp['week'] = temp['Time'].dt.week\n","        temp['weekday'] = temp['Time'].dt.weekday\n","        temp['day'] = temp['Time'].dt.day\n","        temp['hour'] = temp['Time'].dt.hour\n","        temp['holiday'] = temp['Time'].dt.date.isin(holidays).astype(int)\n","        temp['weekend'] = temp['weekday'].map({0:0, 1:0, 2:0, 3:0, 4:0, 5:1, 6:1})\n","        temp['is_holiday'] = (temp['weekend'] + temp['holiday']).map({0:0, 1:1, 2:1})\n","        temp['date'] = pd.to_datetime(temp['Time'].dt.date)\n","        temp['tomorrow'] = pd.to_datetime(temp['date']) + datetime.timedelta(days=1)\n","        \n","        for i in range(24):\n","            temp.loc[temp['hour']==i, 'target'] = temp.loc[temp['hour']==i, 'target'].clip(0, temp.loc[temp['hour']==i, 'target'].mean() + 3*temp.loc[temp['hour']==i, 'target'].std())\n","            \n","        temp2 = pd.DataFrame(pd.date_range('20180701', '20181201', freq='h'), columns=['Time']).iloc[:24, :]\n","        temp2['Time'] = pd.to_datetime(temp2['Time'])\n","        temp2['month'] = temp2['Time'].dt.month\n","        temp2['week'] = temp2['Time'].dt.week\n","        temp2['weekday'] = temp2['Time'].dt.weekday\n","        temp2['day'] = temp2['Time'].dt.day\n","        temp2['hour'] = temp2['Time'].dt.hour\n","        temp2['holiday'] = temp2['Time'].dt.date.isin(holidays).astype(int)\n","        temp2['weekend'] = temp2['weekday'].map({0:0, 1:0, 2:0, 3:0, 4:0, 5:1, 6:1})\n","        temp2['is_holiday'] = (temp2['weekend'] + temp2['holiday']).map({0:0, 1:1, 2:1})\n","        temp2['date'] = pd.to_datetime(temp2['Time'].dt.date)\n","        temp2['tomorrow'] = pd.to_datetime(temp2['date']) + datetime.timedelta(days=1)\n","        \n","        temp['next_week'] = temp['week']+1\n","        temp2['next_week'] = temp2['week']+1\n","        \n","        temp_dict = temp.groupby('next_week')['target'].mean()\n","        temp['next_week_mean'] = temp['week'].map(temp_dict)\n","        temp2['next_week_mean'] = temp2['week'].map(temp_dict)\n","        temp_dict = temp.groupby('next_week')['target'].std()\n","        temp['next_week_std'] = temp['week'].map(temp_dict)\n","        temp2['next_week_std'] = temp2['week'].map(temp_dict)\n","        \n","        if use_temp:\n","            temp = pd.merge(temp, weather, how='left', on='Time')\n","            temp2 = pd.merge(temp2, weather, how='left', on='Time')\n","\n","        return temp.dropna().reset_index(drop=True), temp2\n","    else:\n","        temp = train[['Time', col]].rename(columns={col:'target'})\n","        temp['Time'] = pd.to_datetime(temp['Time'])\n","        temp = temp[temp['Time']>='2017-11-23'].reset_index(drop=True)\n","        temp = temp.loc[temp.index[temp['target'].astype(str)!='nan'][0]:].reset_index(drop=True)\n","        \n","        temp['Time'] = pd.to_datetime(temp['Time'])\n","        temp['month'] = temp['Time'].dt.month\n","        temp['week'] = temp['Time'].dt.week\n","        temp['weekday'] = temp['Time'].dt.weekday\n","        temp['day'] = temp['Time'].dt.day\n","        temp['hour'] = temp['Time'].dt.hour\n","        temp['holiday'] = temp['Time'].dt.date.isin(holidays).astype(int)\n","        temp['weekend'] = temp['weekday'].map({0:0, 1:0, 2:0, 3:0, 4:0, 5:1, 6:1})\n","        temp['is_holiday'] = (temp['weekend'] + temp['holiday']).map({0:0, 1:1, 2:1})\n","        temp['date'] = pd.to_datetime(temp['Time'].dt.date)\n","        temp['tomorrow'] = pd.to_datetime(temp['date']) + datetime.timedelta(days=1)\n","        \n","        for i in range(24):\n","            temp.loc[temp['hour']==i, 'target'] = temp.loc[temp['hour']==i, 'target'].clip(0, temp.loc[temp['hour']==i, 'target'].mean() + 3*temp.loc[temp['hour']==i, 'target'].std())\n","            \n","        temp2 = pd.DataFrame(pd.date_range('20180701', '20181201', freq='h'), columns=['Time']).iloc[:-1]\n","        temp2['Time'] = pd.to_datetime(temp2['Time'])\n","        temp2['month'] = temp2['Time'].dt.month\n","        temp2['week'] = temp2['Time'].dt.week\n","        temp2['weekday'] = temp2['Time'].dt.weekday\n","        temp2['day'] = temp2['Time'].dt.day\n","        temp2['hour'] = temp2['Time'].dt.hour\n","        temp2['holiday'] = temp2['Time'].dt.date.isin(holidays).astype(int)\n","        temp2['weekend'] = temp2['weekday'].map({0:0, 1:0, 2:0, 3:0, 4:0, 5:1, 6:1})\n","        temp2['is_holiday'] = (temp2['weekend'] + temp2['holiday']).map({0:0, 1:1, 2:1})\n","        temp2['date'] = pd.to_datetime(temp2['Time'].dt.date)\n","        temp2['tomorrow'] = pd.to_datetime(temp2['date']) + datetime.timedelta(days=1)\n","        \n","        return temp.dropna().reset_index(drop=True), temp2"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Bxh2NHijLRhR","colab_type":"code","outputId":"589dca24-1e21-441b-d5e3-89ab58c69110","executionInfo":{"status":"ok","timestamp":1572183937421,"user_tz":-540,"elapsed":768439,"user":{"displayName":"이현호","photoUrl":"","userId":"01233170983161563057"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["SEED=42\n","submit_dict = defaultdict()\n","lgb_params = {\n","        'objective':'regression',\n","        'boosting_type':'gbdt',\n","        'metric':'rmse',\n","        'n_jobs':-1,\n","        'learning_rate':0.03,\n","        'num_leaves': 2**9,\n","        'max_depth':-1,\n","        'tree_learner':'serial',\n","        'min_child_weight':5, \n","        'subsample':0.7,\n","        'reg_alpha':0.2,\n","        'reg_lambda':0.2,\n","        'verbose':-1,\n","        'seed': SEED\n","    }\n","\n","for idx in tqdm.tqdm_notebook(list(range(200))):\n","    hours=True\n","    using_temp=True\n","    train_df, test_df = merge(test, sub['meter_id'][idx], hour=hours, use_temp=using_temp)\n","    oof1 = np.zeros(len(train_df))\n","    pred1 = np.zeros(len(test_df))\n","    \n","    feature = [i for i in train_df.columns if i not in ['Time', 'target', 'holiday', 'weekend', 'date', 'tomorrow', 'next_week']]\n","    kf = KFold(n_splits=5, random_state=SEED, shuffle=True)\n","\n","    for trn_idx, val_idx in kf.split(train_df):\n","        tt = lgb.Dataset(train_df.loc[trn_idx, feature], train_df.loc[trn_idx, ['target']])\n","        vv = lgb.Dataset(train_df.loc[val_idx, feature], train_df.loc[val_idx, ['target']])\n","        model = lgb.train(lgb_params, tt, valid_sets=[tt, vv], early_stopping_rounds=50, verbose_eval=0)\n","        oof1[val_idx] = model.predict(train_df.loc[val_idx, feature])\n","        pred1 += model.predict(test_df[feature])/5\n","    oof1[oof1<0] = train_df['target'].min()\n","    pred1[pred1<0] = train_df['target'].min()\n","    \n","    using_temp=False\n","    train_df, test_df = merge(test, sub['meter_id'][idx], hour=hours, use_temp=using_temp)\n","    oof2 = np.zeros(len(train_df))\n","    pred2 = np.zeros(len(test_df))\n","    \n","    feature = [i for i in train_df.columns if i not in ['Time', 'target', 'holiday', 'weekend', 'date', 'tomorrow', 'next_week']]\n","    kf = KFold(n_splits=5, random_state=SEED, shuffle=True)\n","\n","    for trn_idx, val_idx in kf.split(train_df):\n","        tt = lgb.Dataset(train_df.loc[trn_idx, feature], train_df.loc[trn_idx, ['target']])\n","        vv = lgb.Dataset(train_df.loc[val_idx, feature], train_df.loc[val_idx, ['target']])\n","        model = lgb.train(lgb_params, tt, 200, valid_sets=[tt, vv], early_stopping_rounds=50, verbose_eval=0)\n","        oof2[val_idx] = model.predict(train_df.loc[val_idx, feature])\n","        pred2 += model.predict(test_df[feature])/5\n","    oof2[oof2<0] = train_df['target'].min()\n","    pred2[pred2<0] = train_df['target'].min()\n","\n","    submit_dict[idx] = pred1*0.62 + pred2*0.38\n","#     rmse_list.append(rmse(train_df['target'], oof1*0.6 + oof2*0.4))\n","#     smape_list.append(smape_fast(train_df['target'], oof1*0.6 + oof2*0.4))\n"],"execution_count":28,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"961ec967ff0549629fb700f99bc57e05","version_minor":0,"version_major":2},"text/plain":["HBox(children=(IntProgress(value=0, max=200), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"p-LUU2eKY5ne","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":379},"outputId":"2b0ab331-1fe9-433e-aac3-f29457b8a2d5","executionInfo":{"status":"ok","timestamp":1572186008463,"user_tz":-540,"elapsed":624,"user":{"displayName":"이현호","photoUrl":"","userId":"01233170983161563057"}}},"source":["submit_df = pd.DataFrame(submit_dict)\n","submit_df.columns = sub['meter_id']\n","submit_df = submit_df.T.reset_index()\n","submit_df.columns = sub.columns[:25]\n","submit_df_hour = submit_df.copy()\n","submit_df_hour.head(10)"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>meter_id</th>\n","      <th>X2018_7_1_1h</th>\n","      <th>X2018_7_1_2h</th>\n","      <th>X2018_7_1_3h</th>\n","      <th>X2018_7_1_4h</th>\n","      <th>X2018_7_1_5h</th>\n","      <th>X2018_7_1_6h</th>\n","      <th>X2018_7_1_7h</th>\n","      <th>X2018_7_1_8h</th>\n","      <th>X2018_7_1_9h</th>\n","      <th>X2018_7_1_10h</th>\n","      <th>X2018_7_1_11h</th>\n","      <th>X2018_7_1_12h</th>\n","      <th>X2018_7_1_13h</th>\n","      <th>X2018_7_1_14h</th>\n","      <th>X2018_7_1_15h</th>\n","      <th>X2018_7_1_16h</th>\n","      <th>X2018_7_1_17h</th>\n","      <th>X2018_7_1_18h</th>\n","      <th>X2018_7_1_19h</th>\n","      <th>X2018_7_1_20h</th>\n","      <th>X2018_7_1_21h</th>\n","      <th>X2018_7_1_22h</th>\n","      <th>X2018_7_1_23h</th>\n","      <th>X2018_7_1_24h</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>X5</td>\n","      <td>6.053597</td>\n","      <td>5.980461</td>\n","      <td>5.937688</td>\n","      <td>5.932553</td>\n","      <td>5.922468</td>\n","      <td>5.787134</td>\n","      <td>5.811536</td>\n","      <td>6.037873</td>\n","      <td>6.043211</td>\n","      <td>6.130359</td>\n","      <td>6.099497</td>\n","      <td>6.125480</td>\n","      <td>6.108155</td>\n","      <td>6.086025</td>\n","      <td>6.103520</td>\n","      <td>6.139830</td>\n","      <td>6.227678</td>\n","      <td>6.307611</td>\n","      <td>6.279775</td>\n","      <td>6.352630</td>\n","      <td>6.341008</td>\n","      <td>6.340240</td>\n","      <td>6.287965</td>\n","      <td>6.168203</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>X7</td>\n","      <td>1.500352</td>\n","      <td>1.504153</td>\n","      <td>1.503125</td>\n","      <td>1.503133</td>\n","      <td>1.502758</td>\n","      <td>1.483206</td>\n","      <td>1.315147</td>\n","      <td>2.035486</td>\n","      <td>2.543338</td>\n","      <td>2.472324</td>\n","      <td>2.461278</td>\n","      <td>2.539518</td>\n","      <td>2.636460</td>\n","      <td>2.529345</td>\n","      <td>2.504755</td>\n","      <td>2.479226</td>\n","      <td>2.462989</td>\n","      <td>2.448411</td>\n","      <td>2.344828</td>\n","      <td>1.428335</td>\n","      <td>1.177730</td>\n","      <td>1.158950</td>\n","      <td>1.145391</td>\n","      <td>1.152507</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>X10</td>\n","      <td>2.422349</td>\n","      <td>2.422349</td>\n","      <td>2.420456</td>\n","      <td>2.420130</td>\n","      <td>2.417993</td>\n","      <td>2.416961</td>\n","      <td>2.392030</td>\n","      <td>4.786044</td>\n","      <td>6.662815</td>\n","      <td>6.344876</td>\n","      <td>6.354256</td>\n","      <td>6.524043</td>\n","      <td>7.210255</td>\n","      <td>7.318789</td>\n","      <td>7.033566</td>\n","      <td>6.804759</td>\n","      <td>6.376316</td>\n","      <td>6.087858</td>\n","      <td>6.293002</td>\n","      <td>4.207810</td>\n","      <td>2.776494</td>\n","      <td>2.577773</td>\n","      <td>2.582317</td>\n","      <td>2.582317</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>X16</td>\n","      <td>3.374399</td>\n","      <td>3.373277</td>\n","      <td>3.367188</td>\n","      <td>3.364556</td>\n","      <td>3.362485</td>\n","      <td>3.382642</td>\n","      <td>3.518962</td>\n","      <td>3.737508</td>\n","      <td>4.074560</td>\n","      <td>4.602248</td>\n","      <td>5.303362</td>\n","      <td>5.782874</td>\n","      <td>6.807277</td>\n","      <td>6.793480</td>\n","      <td>6.017373</td>\n","      <td>5.975799</td>\n","      <td>5.821209</td>\n","      <td>5.768848</td>\n","      <td>5.938547</td>\n","      <td>5.771215</td>\n","      <td>5.647122</td>\n","      <td>4.743259</td>\n","      <td>3.570733</td>\n","      <td>3.445850</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>X18</td>\n","      <td>2.554790</td>\n","      <td>2.554805</td>\n","      <td>2.554864</td>\n","      <td>2.555527</td>\n","      <td>2.557708</td>\n","      <td>2.564225</td>\n","      <td>2.719557</td>\n","      <td>2.681069</td>\n","      <td>2.646938</td>\n","      <td>2.637001</td>\n","      <td>2.636305</td>\n","      <td>2.634654</td>\n","      <td>2.637755</td>\n","      <td>2.636969</td>\n","      <td>2.635662</td>\n","      <td>2.635362</td>\n","      <td>2.634382</td>\n","      <td>2.629152</td>\n","      <td>2.520963</td>\n","      <td>2.516987</td>\n","      <td>2.519541</td>\n","      <td>2.523347</td>\n","      <td>2.523587</td>\n","      <td>2.523677</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>X20</td>\n","      <td>0.303155</td>\n","      <td>0.303155</td>\n","      <td>0.307571</td>\n","      <td>0.307557</td>\n","      <td>0.301631</td>\n","      <td>0.295967</td>\n","      <td>0.286940</td>\n","      <td>0.291739</td>\n","      <td>0.295136</td>\n","      <td>0.305230</td>\n","      <td>0.337197</td>\n","      <td>0.425197</td>\n","      <td>0.492826</td>\n","      <td>0.473868</td>\n","      <td>0.391794</td>\n","      <td>0.368740</td>\n","      <td>0.353312</td>\n","      <td>0.378991</td>\n","      <td>0.561803</td>\n","      <td>0.622717</td>\n","      <td>0.619374</td>\n","      <td>0.609957</td>\n","      <td>0.541277</td>\n","      <td>0.541155</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>X26</td>\n","      <td>1.231816</td>\n","      <td>1.231457</td>\n","      <td>1.230595</td>\n","      <td>1.229843</td>\n","      <td>1.175516</td>\n","      <td>1.212816</td>\n","      <td>1.046964</td>\n","      <td>1.023517</td>\n","      <td>1.105054</td>\n","      <td>1.346529</td>\n","      <td>1.351397</td>\n","      <td>1.305722</td>\n","      <td>1.247558</td>\n","      <td>1.237945</td>\n","      <td>1.201101</td>\n","      <td>1.145146</td>\n","      <td>1.143545</td>\n","      <td>1.143917</td>\n","      <td>1.164114</td>\n","      <td>1.170671</td>\n","      <td>1.183265</td>\n","      <td>1.190970</td>\n","      <td>1.225837</td>\n","      <td>1.148496</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>X30</td>\n","      <td>2.006526</td>\n","      <td>1.403322</td>\n","      <td>1.125561</td>\n","      <td>1.120359</td>\n","      <td>1.101854</td>\n","      <td>1.056169</td>\n","      <td>1.136334</td>\n","      <td>1.142302</td>\n","      <td>1.174003</td>\n","      <td>1.300278</td>\n","      <td>4.018387</td>\n","      <td>5.124319</td>\n","      <td>5.940337</td>\n","      <td>6.187293</td>\n","      <td>6.179208</td>\n","      <td>6.128313</td>\n","      <td>5.985412</td>\n","      <td>5.760604</td>\n","      <td>5.418229</td>\n","      <td>5.403069</td>\n","      <td>5.403865</td>\n","      <td>5.126218</td>\n","      <td>5.057454</td>\n","      <td>3.920469</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>X31</td>\n","      <td>0.281488</td>\n","      <td>0.333802</td>\n","      <td>0.351729</td>\n","      <td>0.352109</td>\n","      <td>0.353439</td>\n","      <td>0.483565</td>\n","      <td>0.500231</td>\n","      <td>0.533089</td>\n","      <td>0.537629</td>\n","      <td>0.544240</td>\n","      <td>0.551947</td>\n","      <td>0.551652</td>\n","      <td>0.548122</td>\n","      <td>0.548134</td>\n","      <td>0.554119</td>\n","      <td>0.556441</td>\n","      <td>0.553520</td>\n","      <td>0.540119</td>\n","      <td>0.533510</td>\n","      <td>0.520029</td>\n","      <td>0.510495</td>\n","      <td>0.499719</td>\n","      <td>0.493766</td>\n","      <td>0.349988</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>X32</td>\n","      <td>0.246811</td>\n","      <td>0.214709</td>\n","      <td>0.191197</td>\n","      <td>0.191197</td>\n","      <td>0.205284</td>\n","      <td>0.491238</td>\n","      <td>0.492534</td>\n","      <td>0.507172</td>\n","      <td>0.520216</td>\n","      <td>0.551107</td>\n","      <td>0.557008</td>\n","      <td>0.572990</td>\n","      <td>0.548654</td>\n","      <td>0.540262</td>\n","      <td>0.543080</td>\n","      <td>0.540916</td>\n","      <td>0.532265</td>\n","      <td>0.532536</td>\n","      <td>0.531057</td>\n","      <td>0.523982</td>\n","      <td>0.519220</td>\n","      <td>0.524059</td>\n","      <td>0.508448</td>\n","      <td>0.293793</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  meter_id  X2018_7_1_1h  ...  X2018_7_1_23h  X2018_7_1_24h\n","0       X5      6.053597  ...       6.287965       6.168203\n","1       X7      1.500352  ...       1.145391       1.152507\n","2      X10      2.422349  ...       2.582317       2.582317\n","3      X16      3.374399  ...       3.570733       3.445850\n","4      X18      2.554790  ...       2.523587       2.523677\n","5      X20      0.303155  ...       0.541277       0.541155\n","6      X26      1.231816  ...       1.225837       1.148496\n","7      X30      2.006526  ...       5.057454       3.920469\n","8      X31      0.281488  ...       0.493766       0.349988\n","9      X32      0.246811  ...       0.508448       0.293793\n","\n","[10 rows x 25 columns]"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"rAsfayp9lrWA","colab_type":"code","colab":{}},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","path = 'drive/My Drive/11dacon/submit/'\n","\n","submit_df.to_csv(path+'final_prediction_day_month.csv', index=False)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"nNt1OdGfP6uA","colab_type":"code","outputId":"76c83c6a-68b4-48a5-d4e5-e70ccc3a0861","executionInfo":{"status":"ok","timestamp":1572176723890,"user_tz":-540,"elapsed":2122658,"user":{"displayName":"이현호","photoUrl":"","userId":"01233170983161563057"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["submit_dict = defaultdict()\n","rmse_list = []\n","smape_list = []\n","\n","SEED =42\n","for idx in tqdm.tqdm_notebook(list(range(200))):\n","    hours=False\n","    train_df, test_df = merge(test, sub['meter_id'][idx], hour=hours)\n","    oof = np.zeros(len(train_df))\n","    pred = np.zeros(len(test_df))\n","    \n","    lgb_params = {\n","        'objective':'regression',\n","        'boosting_type':'gbdt',\n","        'metric':'rmse',\n","        'n_jobs':-1,\n","        'learning_rate':0.03,\n","        'num_leaves': 2**9,\n","        'max_depth':-1,\n","        'tree_learner':'serial',\n","        'min_child_weight':5, \n","        'subsample':0.7,\n","        'reg_alpha':0.2,\n","        'reg_lambda':0.2,\n","        'verbose':-1,\n","        'seed': SEED\n","    }\n","\n","    feature = [i for i in train_df.columns if i not in ['Time', 'target', 'holiday', 'weekend', 'date', 'tomorrow']]\n","    kf = KFold(n_splits=5, random_state=SEED, shuffle=True)\n","\n","    for trn_idx, val_idx in kf.split(train_df):\n","        tt = lgb.Dataset(train_df.loc[trn_idx, feature], train_df.loc[trn_idx, ['target']])\n","        vv = lgb.Dataset(train_df.loc[val_idx, feature], train_df.loc[val_idx, ['target']])\n","        model = lgb.train(lgb_params, tt, 200, valid_sets=[tt, vv], early_stopping_rounds=50, verbose_eval=0)\n","        oof[val_idx] = model.predict(train_df.loc[val_idx, feature])\n","        pred += model.predict(test_df[feature])/5\n","    oof[oof<0] = train_df['target'].min()\n","    pred[pred<0] = train_df['target'].min()\n","\n","    submit_dict[idx] = pred\n","    rmse_list.append(rmse(train_df['target'], oof))\n","    smape_list.append(smape_fast(train_df['target'], oof))"],"execution_count":20,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"98aa9d1269e5405cb50120353568d66d","version_minor":0,"version_major":2},"text/plain":["HBox(children=(IntProgress(value=0, max=200), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GYNg2bLYKDus","colab_type":"code","outputId":"ada6a51f-9912-4c57-eee0-5414622bb1c3","executionInfo":{"status":"ok","timestamp":1572181084102,"user_tz":-540,"elapsed":659,"user":{"displayName":"이현호","photoUrl":"","userId":"01233170983161563057"}},"colab":{"base_uri":"https://localhost:8080/","height":379}},"source":["submit_df = pd.concat([pd.DataFrame(submit_dict).loc[:23], \n","                       pd.concat([pd.DataFrame([j for i in range(10) for j in str(i) * 24], columns=['house']), pd.DataFrame(submit_dict).loc[:239]], 1).groupby('house').sum().reset_index(drop=True),\n","                       pd.concat([test_df['Time'].dt.to_period('m'), pd.DataFrame(submit_dict)], 1).groupby('Time').sum().reset_index(drop=True)])\n","\n","submit_df.columns = sub['meter_id']\n","submit_df = submit_df.T.reset_index()\n","submit_df.columns = sub.columns\n","submit_df_day = submit_df.copy()\n","submit_df_day.head(10)"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>meter_id</th>\n","      <th>X2018_7_1_1h</th>\n","      <th>X2018_7_1_2h</th>\n","      <th>X2018_7_1_3h</th>\n","      <th>X2018_7_1_4h</th>\n","      <th>X2018_7_1_5h</th>\n","      <th>X2018_7_1_6h</th>\n","      <th>X2018_7_1_7h</th>\n","      <th>X2018_7_1_8h</th>\n","      <th>X2018_7_1_9h</th>\n","      <th>X2018_7_1_10h</th>\n","      <th>X2018_7_1_11h</th>\n","      <th>X2018_7_1_12h</th>\n","      <th>X2018_7_1_13h</th>\n","      <th>X2018_7_1_14h</th>\n","      <th>X2018_7_1_15h</th>\n","      <th>X2018_7_1_16h</th>\n","      <th>X2018_7_1_17h</th>\n","      <th>X2018_7_1_18h</th>\n","      <th>X2018_7_1_19h</th>\n","      <th>X2018_7_1_20h</th>\n","      <th>X2018_7_1_21h</th>\n","      <th>X2018_7_1_22h</th>\n","      <th>X2018_7_1_23h</th>\n","      <th>X2018_7_1_24h</th>\n","      <th>X2018_7_1_d</th>\n","      <th>X2018_7_2_d</th>\n","      <th>X2018_7_3_d</th>\n","      <th>X2018_7_4_d</th>\n","      <th>X2018_7_5_d</th>\n","      <th>X2018_7_6_d</th>\n","      <th>X2018_7_7_d</th>\n","      <th>X2018_7_8_d</th>\n","      <th>X2018_7_9_d</th>\n","      <th>X2018_7_10_d</th>\n","      <th>X2018_7_m</th>\n","      <th>X2018_8_m</th>\n","      <th>X2018_9_m</th>\n","      <th>X2018_10_m</th>\n","      <th>X2018_11_m</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>X5</td>\n","      <td>6.095665</td>\n","      <td>5.988799</td>\n","      <td>5.940606</td>\n","      <td>5.930130</td>\n","      <td>5.901464</td>\n","      <td>5.666707</td>\n","      <td>5.717603</td>\n","      <td>6.011752</td>\n","      <td>5.996266</td>\n","      <td>6.167813</td>\n","      <td>6.150165</td>\n","      <td>6.207364</td>\n","      <td>6.229329</td>\n","      <td>6.207501</td>\n","      <td>6.194062</td>\n","      <td>6.212172</td>\n","      <td>6.271239</td>\n","      <td>6.369458</td>\n","      <td>6.316509</td>\n","      <td>6.388392</td>\n","      <td>6.361806</td>\n","      <td>6.359462</td>\n","      <td>6.319266</td>\n","      <td>6.177715</td>\n","      <td>147.181244</td>\n","      <td>144.536576</td>\n","      <td>145.748521</td>\n","      <td>144.601846</td>\n","      <td>145.293113</td>\n","      <td>145.526664</td>\n","      <td>144.442461</td>\n","      <td>145.537593</td>\n","      <td>143.056833</td>\n","      <td>142.633273</td>\n","      <td>4540.365189</td>\n","      <td>4537.536335</td>\n","      <td>4391.825787</td>\n","      <td>4538.567799</td>\n","      <td>4386.570272</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>X7</td>\n","      <td>1.186471</td>\n","      <td>1.199445</td>\n","      <td>1.190245</td>\n","      <td>1.194276</td>\n","      <td>1.198024</td>\n","      <td>1.204233</td>\n","      <td>1.247929</td>\n","      <td>2.324761</td>\n","      <td>2.777344</td>\n","      <td>2.756682</td>\n","      <td>2.773428</td>\n","      <td>2.935300</td>\n","      <td>3.265009</td>\n","      <td>3.083659</td>\n","      <td>3.039997</td>\n","      <td>3.026697</td>\n","      <td>3.007333</td>\n","      <td>3.008437</td>\n","      <td>2.786079</td>\n","      <td>1.533569</td>\n","      <td>1.287729</td>\n","      <td>1.271657</td>\n","      <td>1.258766</td>\n","      <td>1.252823</td>\n","      <td>49.809892</td>\n","      <td>35.930494</td>\n","      <td>33.191220</td>\n","      <td>32.743340</td>\n","      <td>38.806892</td>\n","      <td>44.416243</td>\n","      <td>49.039025</td>\n","      <td>49.620270</td>\n","      <td>36.718771</td>\n","      <td>34.160873</td>\n","      <td>1270.194880</td>\n","      <td>1264.401376</td>\n","      <td>1252.670161</td>\n","      <td>1255.367605</td>\n","      <td>1228.291190</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>X10</td>\n","      <td>2.258073</td>\n","      <td>2.256890</td>\n","      <td>2.253625</td>\n","      <td>2.253115</td>\n","      <td>2.246763</td>\n","      <td>2.232705</td>\n","      <td>2.212464</td>\n","      <td>5.201174</td>\n","      <td>6.828317</td>\n","      <td>6.620215</td>\n","      <td>6.845416</td>\n","      <td>7.152351</td>\n","      <td>8.729113</td>\n","      <td>8.854250</td>\n","      <td>8.368004</td>\n","      <td>8.140703</td>\n","      <td>7.242183</td>\n","      <td>6.749503</td>\n","      <td>6.950398</td>\n","      <td>4.182852</td>\n","      <td>2.685805</td>\n","      <td>2.616900</td>\n","      <td>2.617737</td>\n","      <td>2.618250</td>\n","      <td>118.116806</td>\n","      <td>50.095442</td>\n","      <td>71.810902</td>\n","      <td>66.394618</td>\n","      <td>64.194567</td>\n","      <td>104.509589</td>\n","      <td>117.437040</td>\n","      <td>119.056091</td>\n","      <td>46.419243</td>\n","      <td>64.370293</td>\n","      <td>2575.945170</td>\n","      <td>2557.749773</td>\n","      <td>2590.947449</td>\n","      <td>2523.683491</td>\n","      <td>2494.133156</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>X16</td>\n","      <td>3.326692</td>\n","      <td>3.321120</td>\n","      <td>3.304649</td>\n","      <td>3.300864</td>\n","      <td>3.290569</td>\n","      <td>3.289444</td>\n","      <td>3.472170</td>\n","      <td>3.662154</td>\n","      <td>3.987658</td>\n","      <td>4.667505</td>\n","      <td>5.233320</td>\n","      <td>5.825346</td>\n","      <td>7.996399</td>\n","      <td>7.972115</td>\n","      <td>5.942023</td>\n","      <td>5.498964</td>\n","      <td>5.425065</td>\n","      <td>5.352478</td>\n","      <td>5.596412</td>\n","      <td>5.657174</td>\n","      <td>5.274130</td>\n","      <td>4.506643</td>\n","      <td>3.462320</td>\n","      <td>3.389559</td>\n","      <td>112.754774</td>\n","      <td>97.642076</td>\n","      <td>98.286073</td>\n","      <td>93.245372</td>\n","      <td>95.419965</td>\n","      <td>106.922061</td>\n","      <td>113.414904</td>\n","      <td>113.576384</td>\n","      <td>98.513899</td>\n","      <td>96.199772</td>\n","      <td>3270.778561</td>\n","      <td>3260.359144</td>\n","      <td>3192.372167</td>\n","      <td>3248.714864</td>\n","      <td>3160.180150</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>X18</td>\n","      <td>2.554058</td>\n","      <td>2.554071</td>\n","      <td>2.554582</td>\n","      <td>2.555781</td>\n","      <td>2.561495</td>\n","      <td>2.566021</td>\n","      <td>2.808773</td>\n","      <td>2.716912</td>\n","      <td>2.640110</td>\n","      <td>2.626231</td>\n","      <td>2.626130</td>\n","      <td>2.625141</td>\n","      <td>2.619060</td>\n","      <td>2.620592</td>\n","      <td>2.620964</td>\n","      <td>2.620130</td>\n","      <td>2.618357</td>\n","      <td>2.611962</td>\n","      <td>2.510601</td>\n","      <td>2.504184</td>\n","      <td>2.506481</td>\n","      <td>2.514864</td>\n","      <td>2.516361</td>\n","      <td>2.516700</td>\n","      <td>62.169561</td>\n","      <td>59.877777</td>\n","      <td>59.869072</td>\n","      <td>59.927460</td>\n","      <td>60.091790</td>\n","      <td>62.317748</td>\n","      <td>62.466884</td>\n","      <td>62.525902</td>\n","      <td>60.183652</td>\n","      <td>60.398872</td>\n","      <td>1886.081235</td>\n","      <td>1885.649048</td>\n","      <td>1829.158209</td>\n","      <td>1883.283641</td>\n","      <td>1825.635293</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>X20</td>\n","      <td>0.312918</td>\n","      <td>0.312918</td>\n","      <td>0.312840</td>\n","      <td>0.312817</td>\n","      <td>0.311399</td>\n","      <td>0.310592</td>\n","      <td>0.311615</td>\n","      <td>0.312398</td>\n","      <td>0.337016</td>\n","      <td>0.376728</td>\n","      <td>0.412933</td>\n","      <td>0.665518</td>\n","      <td>0.858237</td>\n","      <td>0.865512</td>\n","      <td>0.704881</td>\n","      <td>0.641820</td>\n","      <td>0.600479</td>\n","      <td>0.675828</td>\n","      <td>0.974799</td>\n","      <td>1.047656</td>\n","      <td>1.054709</td>\n","      <td>0.980646</td>\n","      <td>0.842187</td>\n","      <td>0.842187</td>\n","      <td>14.378634</td>\n","      <td>16.569032</td>\n","      <td>12.300206</td>\n","      <td>11.488263</td>\n","      <td>13.072114</td>\n","      <td>12.814531</td>\n","      <td>14.341529</td>\n","      <td>14.414609</td>\n","      <td>16.599387</td>\n","      <td>12.364088</td>\n","      <td>426.637985</td>\n","      <td>422.926094</td>\n","      <td>410.892989</td>\n","      <td>424.925379</td>\n","      <td>405.813117</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>X26</td>\n","      <td>1.255311</td>\n","      <td>1.255163</td>\n","      <td>1.253736</td>\n","      <td>1.251998</td>\n","      <td>1.134122</td>\n","      <td>1.184112</td>\n","      <td>0.978835</td>\n","      <td>0.937469</td>\n","      <td>1.041123</td>\n","      <td>1.267415</td>\n","      <td>1.283003</td>\n","      <td>1.227632</td>\n","      <td>1.171780</td>\n","      <td>1.143579</td>\n","      <td>1.100829</td>\n","      <td>1.096922</td>\n","      <td>1.093693</td>\n","      <td>1.100065</td>\n","      <td>1.153844</td>\n","      <td>1.181753</td>\n","      <td>1.199273</td>\n","      <td>1.209510</td>\n","      <td>1.264966</td>\n","      <td>1.174280</td>\n","      <td>27.960412</td>\n","      <td>27.504787</td>\n","      <td>34.557931</td>\n","      <td>39.256231</td>\n","      <td>37.061463</td>\n","      <td>35.948128</td>\n","      <td>29.386607</td>\n","      <td>28.812169</td>\n","      <td>26.515518</td>\n","      <td>34.422264</td>\n","      <td>1005.249144</td>\n","      <td>1021.126346</td>\n","      <td>981.217684</td>\n","      <td>1010.980092</td>\n","      <td>986.774328</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>X30</td>\n","      <td>2.248487</td>\n","      <td>1.451999</td>\n","      <td>1.183222</td>\n","      <td>1.182626</td>\n","      <td>1.173063</td>\n","      <td>1.172821</td>\n","      <td>1.191513</td>\n","      <td>1.191575</td>\n","      <td>1.199340</td>\n","      <td>1.393708</td>\n","      <td>4.452868</td>\n","      <td>5.745273</td>\n","      <td>6.396862</td>\n","      <td>6.895240</td>\n","      <td>6.953803</td>\n","      <td>6.781147</td>\n","      <td>6.555409</td>\n","      <td>6.116394</td>\n","      <td>5.906221</td>\n","      <td>5.874569</td>\n","      <td>5.828313</td>\n","      <td>5.138450</td>\n","      <td>5.154259</td>\n","      <td>3.868939</td>\n","      <td>95.056100</td>\n","      <td>101.179649</td>\n","      <td>112.814716</td>\n","      <td>112.973650</td>\n","      <td>104.475102</td>\n","      <td>116.220739</td>\n","      <td>142.589769</td>\n","      <td>86.005528</td>\n","      <td>101.277096</td>\n","      <td>109.251514</td>\n","      <td>3309.751100</td>\n","      <td>3336.764944</td>\n","      <td>3252.083752</td>\n","      <td>3359.529858</td>\n","      <td>3205.755736</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>X31</td>\n","      <td>0.272334</td>\n","      <td>0.328963</td>\n","      <td>0.348591</td>\n","      <td>0.349090</td>\n","      <td>0.349935</td>\n","      <td>0.475267</td>\n","      <td>0.502917</td>\n","      <td>0.538918</td>\n","      <td>0.546418</td>\n","      <td>0.554651</td>\n","      <td>0.567935</td>\n","      <td>0.567405</td>\n","      <td>0.564785</td>\n","      <td>0.560894</td>\n","      <td>0.570211</td>\n","      <td>0.574289</td>\n","      <td>0.570991</td>\n","      <td>0.554917</td>\n","      <td>0.548887</td>\n","      <td>0.532344</td>\n","      <td>0.519385</td>\n","      <td>0.509458</td>\n","      <td>0.497040</td>\n","      <td>0.348064</td>\n","      <td>11.753692</td>\n","      <td>11.864576</td>\n","      <td>11.784874</td>\n","      <td>11.755042</td>\n","      <td>11.510560</td>\n","      <td>11.522408</td>\n","      <td>11.747307</td>\n","      <td>11.635378</td>\n","      <td>11.854642</td>\n","      <td>11.724548</td>\n","      <td>358.457525</td>\n","      <td>357.767597</td>\n","      <td>347.035177</td>\n","      <td>358.614408</td>\n","      <td>346.129745</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>X32</td>\n","      <td>0.256607</td>\n","      <td>0.222432</td>\n","      <td>0.203908</td>\n","      <td>0.203908</td>\n","      <td>0.214587</td>\n","      <td>0.454451</td>\n","      <td>0.456967</td>\n","      <td>0.472595</td>\n","      <td>0.493492</td>\n","      <td>0.531469</td>\n","      <td>0.538451</td>\n","      <td>0.557013</td>\n","      <td>0.541863</td>\n","      <td>0.536514</td>\n","      <td>0.531790</td>\n","      <td>0.531225</td>\n","      <td>0.525120</td>\n","      <td>0.520995</td>\n","      <td>0.518386</td>\n","      <td>0.514832</td>\n","      <td>0.516770</td>\n","      <td>0.519499</td>\n","      <td>0.500086</td>\n","      <td>0.305308</td>\n","      <td>10.668270</td>\n","      <td>11.549889</td>\n","      <td>11.467707</td>\n","      <td>11.425928</td>\n","      <td>11.511452</td>\n","      <td>11.512691</td>\n","      <td>11.627738</td>\n","      <td>10.678472</td>\n","      <td>11.573471</td>\n","      <td>11.505248</td>\n","      <td>353.743558</td>\n","      <td>354.423314</td>\n","      <td>342.352147</td>\n","      <td>354.376832</td>\n","      <td>343.029882</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  meter_id  X2018_7_1_1h  X2018_7_1_2h  ...    X2018_9_m   X2018_10_m   X2018_11_m\n","0       X5      6.095665      5.988799  ...  4391.825787  4538.567799  4386.570272\n","1       X7      1.186471      1.199445  ...  1252.670161  1255.367605  1228.291190\n","2      X10      2.258073      2.256890  ...  2590.947449  2523.683491  2494.133156\n","3      X16      3.326692      3.321120  ...  3192.372167  3248.714864  3160.180150\n","4      X18      2.554058      2.554071  ...  1829.158209  1883.283641  1825.635293\n","5      X20      0.312918      0.312918  ...   410.892989   424.925379   405.813117\n","6      X26      1.255311      1.255163  ...   981.217684  1010.980092   986.774328\n","7      X30      2.248487      1.451999  ...  3252.083752  3359.529858  3205.755736\n","8      X31      0.272334      0.328963  ...   347.035177   358.614408   346.129745\n","9      X32      0.256607      0.222432  ...   342.352147   354.376832   343.029882\n","\n","[10 rows x 40 columns]"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"qemaokimaSuv","colab_type":"code","outputId":"77ef2793-2a99-4e2a-9971-832619cf2455","executionInfo":{"status":"ok","timestamp":1572181106812,"user_tz":-540,"elapsed":869,"user":{"displayName":"이현호","photoUrl":"","userId":"01233170983161563057"}},"colab":{"base_uri":"https://localhost:8080/","height":224}},"source":["submit_df = pd.concat([submit_df_hour, submit_df_day.iloc[:, 25:]], 1)\n","submit_df.head()"],"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>meter_id</th>\n","      <th>X2018_7_1_1h</th>\n","      <th>X2018_7_1_2h</th>\n","      <th>X2018_7_1_3h</th>\n","      <th>X2018_7_1_4h</th>\n","      <th>X2018_7_1_5h</th>\n","      <th>X2018_7_1_6h</th>\n","      <th>X2018_7_1_7h</th>\n","      <th>X2018_7_1_8h</th>\n","      <th>X2018_7_1_9h</th>\n","      <th>X2018_7_1_10h</th>\n","      <th>X2018_7_1_11h</th>\n","      <th>X2018_7_1_12h</th>\n","      <th>X2018_7_1_13h</th>\n","      <th>X2018_7_1_14h</th>\n","      <th>X2018_7_1_15h</th>\n","      <th>X2018_7_1_16h</th>\n","      <th>X2018_7_1_17h</th>\n","      <th>X2018_7_1_18h</th>\n","      <th>X2018_7_1_19h</th>\n","      <th>X2018_7_1_20h</th>\n","      <th>X2018_7_1_21h</th>\n","      <th>X2018_7_1_22h</th>\n","      <th>X2018_7_1_23h</th>\n","      <th>X2018_7_1_24h</th>\n","      <th>X2018_7_1_d</th>\n","      <th>X2018_7_2_d</th>\n","      <th>X2018_7_3_d</th>\n","      <th>X2018_7_4_d</th>\n","      <th>X2018_7_5_d</th>\n","      <th>X2018_7_6_d</th>\n","      <th>X2018_7_7_d</th>\n","      <th>X2018_7_8_d</th>\n","      <th>X2018_7_9_d</th>\n","      <th>X2018_7_10_d</th>\n","      <th>X2018_7_m</th>\n","      <th>X2018_8_m</th>\n","      <th>X2018_9_m</th>\n","      <th>X2018_10_m</th>\n","      <th>X2018_11_m</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>X5</td>\n","      <td>6.117882</td>\n","      <td>6.005936</td>\n","      <td>5.955821</td>\n","      <td>5.948138</td>\n","      <td>5.936426</td>\n","      <td>5.787974</td>\n","      <td>5.824624</td>\n","      <td>6.057073</td>\n","      <td>6.047436</td>\n","      <td>6.132033</td>\n","      <td>6.098102</td>\n","      <td>6.154531</td>\n","      <td>6.133918</td>\n","      <td>6.112979</td>\n","      <td>6.145722</td>\n","      <td>6.203157</td>\n","      <td>6.282378</td>\n","      <td>6.370438</td>\n","      <td>6.313028</td>\n","      <td>6.376195</td>\n","      <td>6.348988</td>\n","      <td>6.349040</td>\n","      <td>6.291330</td>\n","      <td>6.159653</td>\n","      <td>147.181244</td>\n","      <td>144.536576</td>\n","      <td>145.748521</td>\n","      <td>144.601846</td>\n","      <td>145.293113</td>\n","      <td>145.526664</td>\n","      <td>144.442461</td>\n","      <td>145.537593</td>\n","      <td>143.056833</td>\n","      <td>142.633273</td>\n","      <td>4540.365189</td>\n","      <td>4537.536335</td>\n","      <td>4391.825787</td>\n","      <td>4538.567799</td>\n","      <td>4386.570272</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>X7</td>\n","      <td>1.476635</td>\n","      <td>1.483985</td>\n","      <td>1.483210</td>\n","      <td>1.483909</td>\n","      <td>1.479882</td>\n","      <td>1.471004</td>\n","      <td>1.322866</td>\n","      <td>2.056533</td>\n","      <td>2.591709</td>\n","      <td>2.522149</td>\n","      <td>2.509938</td>\n","      <td>2.603683</td>\n","      <td>2.694263</td>\n","      <td>2.567305</td>\n","      <td>2.554583</td>\n","      <td>2.522698</td>\n","      <td>2.503520</td>\n","      <td>2.489322</td>\n","      <td>2.383212</td>\n","      <td>1.448890</td>\n","      <td>1.189222</td>\n","      <td>1.168595</td>\n","      <td>1.155737</td>\n","      <td>1.161590</td>\n","      <td>49.809892</td>\n","      <td>35.930494</td>\n","      <td>33.191220</td>\n","      <td>32.743340</td>\n","      <td>38.806892</td>\n","      <td>44.416243</td>\n","      <td>49.039025</td>\n","      <td>49.620270</td>\n","      <td>36.718771</td>\n","      <td>34.160873</td>\n","      <td>1270.194880</td>\n","      <td>1264.401376</td>\n","      <td>1252.670161</td>\n","      <td>1255.367605</td>\n","      <td>1228.291190</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>X10</td>\n","      <td>2.575563</td>\n","      <td>2.574644</td>\n","      <td>2.573028</td>\n","      <td>2.572569</td>\n","      <td>2.567067</td>\n","      <td>2.548465</td>\n","      <td>2.466105</td>\n","      <td>4.887182</td>\n","      <td>6.830278</td>\n","      <td>6.449171</td>\n","      <td>6.473066</td>\n","      <td>6.701613</td>\n","      <td>7.447715</td>\n","      <td>7.599232</td>\n","      <td>7.280241</td>\n","      <td>6.980232</td>\n","      <td>6.417277</td>\n","      <td>6.101171</td>\n","      <td>6.338279</td>\n","      <td>4.231567</td>\n","      <td>2.733591</td>\n","      <td>2.538181</td>\n","      <td>2.548150</td>\n","      <td>2.547531</td>\n","      <td>118.116806</td>\n","      <td>50.095442</td>\n","      <td>71.810902</td>\n","      <td>66.394618</td>\n","      <td>64.194567</td>\n","      <td>104.509589</td>\n","      <td>117.437040</td>\n","      <td>119.056091</td>\n","      <td>46.419243</td>\n","      <td>64.370293</td>\n","      <td>2575.945170</td>\n","      <td>2557.749773</td>\n","      <td>2590.947449</td>\n","      <td>2523.683491</td>\n","      <td>2494.133156</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>X16</td>\n","      <td>3.443635</td>\n","      <td>3.442061</td>\n","      <td>3.419402</td>\n","      <td>3.416321</td>\n","      <td>3.426354</td>\n","      <td>3.463164</td>\n","      <td>3.573466</td>\n","      <td>3.803141</td>\n","      <td>4.180800</td>\n","      <td>4.720698</td>\n","      <td>5.393305</td>\n","      <td>5.882552</td>\n","      <td>7.088581</td>\n","      <td>7.038605</td>\n","      <td>6.168826</td>\n","      <td>6.225926</td>\n","      <td>6.033692</td>\n","      <td>5.937540</td>\n","      <td>6.125572</td>\n","      <td>5.850390</td>\n","      <td>5.659789</td>\n","      <td>4.768069</td>\n","      <td>3.582858</td>\n","      <td>3.422202</td>\n","      <td>112.754774</td>\n","      <td>97.642076</td>\n","      <td>98.286073</td>\n","      <td>93.245372</td>\n","      <td>95.419965</td>\n","      <td>106.922061</td>\n","      <td>113.414904</td>\n","      <td>113.576384</td>\n","      <td>98.513899</td>\n","      <td>96.199772</td>\n","      <td>3270.778561</td>\n","      <td>3260.359144</td>\n","      <td>3192.372167</td>\n","      <td>3248.714864</td>\n","      <td>3160.180150</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>X18</td>\n","      <td>2.550330</td>\n","      <td>2.550392</td>\n","      <td>2.551108</td>\n","      <td>2.552347</td>\n","      <td>2.555655</td>\n","      <td>2.564281</td>\n","      <td>2.744197</td>\n","      <td>2.683331</td>\n","      <td>2.647844</td>\n","      <td>2.638499</td>\n","      <td>2.636446</td>\n","      <td>2.635797</td>\n","      <td>2.636766</td>\n","      <td>2.636640</td>\n","      <td>2.637415</td>\n","      <td>2.637151</td>\n","      <td>2.635731</td>\n","      <td>2.627508</td>\n","      <td>2.515051</td>\n","      <td>2.510805</td>\n","      <td>2.515533</td>\n","      <td>2.521086</td>\n","      <td>2.521487</td>\n","      <td>2.521620</td>\n","      <td>62.169561</td>\n","      <td>59.877777</td>\n","      <td>59.869072</td>\n","      <td>59.927460</td>\n","      <td>60.091790</td>\n","      <td>62.317748</td>\n","      <td>62.466884</td>\n","      <td>62.525902</td>\n","      <td>60.183652</td>\n","      <td>60.398872</td>\n","      <td>1886.081235</td>\n","      <td>1885.649048</td>\n","      <td>1829.158209</td>\n","      <td>1883.283641</td>\n","      <td>1825.635293</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  meter_id  X2018_7_1_1h  X2018_7_1_2h  ...    X2018_9_m   X2018_10_m   X2018_11_m\n","0       X5      6.117882      6.005936  ...  4391.825787  4538.567799  4386.570272\n","1       X7      1.476635      1.483985  ...  1252.670161  1255.367605  1228.291190\n","2      X10      2.575563      2.574644  ...  2590.947449  2523.683491  2494.133156\n","3      X16      3.443635      3.442061  ...  3192.372167  3248.714864  3160.180150\n","4      X18      2.550330      2.550392  ...  1829.158209  1883.283641  1825.635293\n","\n","[5 rows x 40 columns]"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"fUfMDoFHNVfl","colab_type":"code","outputId":"59f40640-c52b-4cf5-bd71-2b20acec0011","executionInfo":{"status":"ok","timestamp":1572181119092,"user_tz":-540,"elapsed":630,"user":{"displayName":"이현호","photoUrl":"","userId":"01233170983161563057"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","path = 'drive/My Drive/11dacon/submit/'\n","\n","submit_df.to_csv(path+'final_prediction_day_month.csv', index=False)"],"execution_count":27,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_CupuIIoESTP","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}